{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red35\green47\blue57;
\red62\green62\blue62;\red17\green110\blue137;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c100000\c100000\c99985\c0;\cssrgb\c18151\c24051\c28711;
\cssrgb\c31048\c31048\c30971;\cssrgb\c3182\c50725\c60835;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid8}
{\list\listtemplateid9\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid801\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid9}
{\list\listtemplateid10\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid901\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid10}
{\list\listtemplateid11\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1001\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid11}
{\list\listtemplateid12\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid12}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}{\listoverride\listid9\listoverridecount0\ls9}{\listoverride\listid10\listoverridecount0\ls10}{\listoverride\listid11\listoverridecount0\ls11}{\listoverride\listid12\listoverridecount0\ls12}}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\b\fs48 \cf2 \cb3 \expnd0\expndtw0\kerning0
General Definitions\
\pard\pardeftab720\partightenfactor0

\fs32 \cf2 \cb3 Visible Lifecycle:
\f1\b0 \cb3  The part of the Lifecycle between onStart and onStop when the Activity is visible.\

\f0\b \cb3 Focus:
\f1\b0 \cb3  An Activity is said to have focus when it's the activity the user can interact with.\

\f0\b \cb3 Foreground:
\f1\b0 \cb3  When the activity is on screen.\

\f0\b \cb3 Background:
\f1\b0 \cb3  When the activity is fully off screen, it is considered in the background.\
\
\pard\pardeftab720\partightenfactor0

\f0\b\fs48 \cf2 \cb3 Lifecycle States\
\pard\pardeftab720\partightenfactor0

\f1\b0\fs32 \cf2 \cb3 These are the same for both the Fragment Lifecycle and the Activity Lifecycle.\

\f0\b \cb3 Initialized:
\f1\b0 \cb3  This is the starting state whenever you make a new activity. This is a transient state -- it immediately goes to Created.\

\f0\b \cb3 Created:
\f1\b0 \cb3  Activity has just been created, but it\'92s not visible and it doesn\'92t have focus (you\'92re not able to interact with it).\

\f0\b \cb3 Started:
\f1\b0 \cb3  Activity is visible but doesn\'92t have focus.\

\f0\b \cb3 Resumed:
\f1\b0 \cb3  The state of the activity when it is running. It\'92s visible and has focus.\

\f0\b \cb3 Destroyed:
\f1\b0 \cb3  Activity is destroyed. It can be ejected from memory at any point and should not be referenced or interacted with.\
\
\pard\pardeftab720\partightenfactor0

\f0\b\fs48 \cf2 \cb3 Activity Lifecycle Callbacks\
\pard\pardeftab720\partightenfactor0

\fs32 \cf2 \cb3 onCreate:
\f1\b0 \cb3  This is called the first time the activity starts and is therefore only called once during the lifecycle of the activity. It represents when the activity is created and initialized. The activity is not yet visible and you can't interact with it. You must implement onCreate. In onCreate you should:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\cb3 \expnd0\expndtw0\kerning0
Inflate the activity's UI, whether that's using findViewById or databinding.\
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\cb3 \expnd0\expndtw0\kerning0
Initialize variables.\
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\cb3 \expnd0\expndtw0\kerning0
Do any other initialization that only happens once during the activity lifetime.\
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 \cb3 onStart:
\f1\b0 \cb3  This is triggered when the activity is about to become visible. It can be called multiple times as the user navigates away from the activity and then back. Examples of the user "navigating away" are when they go to the home screen, or to a new activity in the app. At this point, the activity is not interactive. In onStart you should:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\cb3 \expnd0\expndtw0\kerning0
Start any sensors, animations or other procedures that need to start when the activity is visible.\
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 \cb3 onResume:
\f1\b0 \cb3  This is triggered when the activity has focus and the user can interact with it. Here you should:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\cb3 \expnd0\expndtw0\kerning0
Start any sensors, animations or other procedures that need to start when the activity has focus (the activity the user is currently interacting with).\
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 \cb3 onPause:
\f1\b0 \cb3  The mirror method to onResume. This method is called as soon as the activity loses focus and the user can't interact with it. An activity can lose focus without fully disappearing from the screen (for example, when a dialog appears that partially obscures the activity). Here you should:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls4\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\cb3 \expnd0\expndtw0\kerning0
Stop any sensors, animations or other procedures that should not run when the activity doesn't have focus and is partially obscured.\
\ls4\ilvl0\cb3 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\cb3 \expnd0\expndtw0\kerning0
Keep execution fast. The next activity is not shown until this completes.\
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 \cb3 onStop:
\f1\b0 \cb3  This is the mirror method to onStart. It is called when you can no longer see the activity. Here you should:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls5\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\cb3 \expnd0\expndtw0\kerning0
Stop any sensor, animations or other procedures that should not run when the activity is not on screen.\
\ls5\ilvl0\cb3 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\cb3 \expnd0\expndtw0\kerning0
You can use this to persist (permanently save) data, which you\'92ll be learning more about in Lesson 6\
\ls5\ilvl0\cb3 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\cb3 \expnd0\expndtw0\kerning0
Stop logic that updates the UI. This should not be running when the activity is off-screen; it's a waste of resources.\
\ls5\ilvl0\cb3 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\cb3 \expnd0\expndtw0\kerning0
There are also restrictions as soon as the app goes into the background, which is when all activities in your app are in the background. We'll talk more about this in Lesson 9.\
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 \cb3 onDestroy:
\f1\b0 \cb3  This is the mirror method to onCreate. It is called once when the activity is fully destroyed. This happens when you navigate back out of the activity (as in press the back button), or manually call finish(). It is your last chance to clean up resources associated with the activity. Here you should:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls6\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\cb3 \expnd0\expndtw0\kerning0
Tear down or release any resources that are related to the activity and are not automatically released for you. Forgetting to do this could cause a memory leak! Logic that refers to the activity or attempts to update the UI after the activity has been destroyed could crash the app!\
\pard\tx566\pardeftab720\partightenfactor0
\cf2 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs48 \cf2 \cb3 Summary of the Fragment Lifecycle\
\pard\pardeftab720\partightenfactor0

\f1\b0\fs32 \cf2 \cb3 Fragments also have lifecycle states that they go between. The lifecycle states are the same as the activity states. You\'92ll notice that in your Android Trivia app, you\'92re using the onCreateView callback - while the fragment lifecycle states are the same, 
\f0\b \cb3 the callbacks are different
\f1\b0 \cb3 .\
A deep dive into the fragment lifecycle could be a lesson in itself. Here, we\'92ll just cover the basics with the summary below:\
\
\pard\pardeftab720\partightenfactor0

\f0\b\fs40 \cf2 \cb3 Important Fragment Callbacks to Implement\
\pard\pardeftab720\partightenfactor0

\fs32 \cf2 \cb3 onCreate:
\f1\b0 \cb3  Similar to the Activity\'92s onCreate callback. This is when the fragment is created. This will only get called once. Here you should:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls7\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\cb3 \expnd0\expndtw0\kerning0
Initialize anything essential for you fragment.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls7\ilvl0
\f0\b \cf2 \cb3 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\cb3 \expnd0\expndtw0\kerning0
DO NOT inflate XML
\f1\b0 \cb3 , do that in onCreateView, when the system is first drawing the fragment NOT reference the activity, it is still being created. Do this in onActivityCreated.\
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 \cb3 onCreateView:
\f1\b0 \cb3  This is called between onCreate and onActivityCreated. when the system will draw the fragment for the first time when the fragment becomes visible again. You must return a view in this callback if your fragment has a UI. Here you should:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls8\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\cb3 \expnd0\expndtw0\kerning0
Create your views by inflating your XML.\
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 \cb3 onStop:
\f1\b0 \cb3  Very similar to Activity\'92s onStop. This callback is called when the user leaves your fragment. Here you should:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls9\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\cb3 \expnd0\expndtw0\kerning0
Save any permanent fragment state (this will be discussed in lesson 6)\
\pard\pardeftab720\partightenfactor0

\f0\b\fs40 \cf2 \cb3 \
Other callbacks\
\pard\pardeftab720\partightenfactor0

\fs32 \cf2 \cb3 onAttach:
\f1\b0 \cb3  When the fragment is first attached to the activity. This is only called once during the lifecycle of the fragment.\

\f0\b \cb3 onActivityCreated:
\f1\b0 \cb3  Called when the activity onCreate method has returned and the activity has been initialized. If the fragment is added to an activity that's already created, this still gets called. It's purpose is to contain any code the requires the activity exists and it is called multiple times during the lifecycle of the fragment. Here you should:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls10\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\cb3 \expnd0\expndtw0\kerning0
Execute any code that requires an activity instance\
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 \cb3 onStart:
\f1\b0 \cb3  Called right before the fragment is visible to the user.\

\f0\b \cb3 onResume:
\f1\b0 \cb3  When the activity resumes the fragment. This means the fragment is visible, has focus and is running.\

\f0\b \cb3 onStop:
\f1\b0 \cb3  Called when the Activity\'92s onStop is called. The fragment no longer has focus.\

\f0\b \cb3 onDestroyView:
\f1\b0 \cb3  Unlike activities, 
\f0\b \cb3 fragment views are destroyed every time they go off screen
\f1\b0 \cb3 . This is called after the view is no longer visible.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls11\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\cb3 \expnd0\expndtw0\kerning0
Do not refer to views in this callback, since they are destroyed\
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 \cb3 onDestroy:
\f1\b0 \cb3  Called when the Activity\'92s onDestroy is called.\

\f0\b \cb3 onDetach:
\f1\b0 \cb3  Called when the association between the fragment and the activity is destroyed.\
\pard\pardeftab720\partightenfactor0

\f0\b\fs48 \cf2 \cb3 \
Lifecycle Cheat sheets\
\pard\pardeftab720\partightenfactor0

\f1\b0\fs32 \cf2 \cb3 What you\'92ve seen up to this point are the Activity Lifecycle and the Fragment Lifecycle for a single Activity or Fragment. For more complicated apps, it becomes important to understand the interactions between Activity and Fragment life cycles and multiple activities. This is outside of the scope of this lesson, but there are a series of excellent blog posts and cheat sheets posted by Googler which are helpful references for this:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls12\ilvl0
\f0\b \cf2 \cb3 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}{\field{\*\fldinst{HYPERLINK "https://medium.com/androiddevelopers/the-android-lifecycle-cheat-sheet-part-i-single-activities-e49fd3d202ab"}}{\fldrslt \cb3 \expnd0\expndtw0\kerning0
The Android Lifecycle cheat sheet\uc0\u8202 \'97\u8202 part I: Single Activity}}
\f1\b0 \cb3 \expnd0\expndtw0\kerning0
 - This is a visual recap of much of the material here.\
\ls12\ilvl0
\f0\b \cb3 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}{\field{\*\fldinst{HYPERLINK "https://medium.com/androiddevelopers/the-android-lifecycle-cheat-sheet-part-ii-multiple-activities-a411fd139f24"}}{\fldrslt \cb3 \expnd0\expndtw0\kerning0
The Android Lifecycle cheat sheet\uc0\u8202 \'97\u8202 part II: Multiple Activities}}
\f1\b0 \cb3 \expnd0\expndtw0\kerning0
 - This shows the order of lifecycle calls when two activities interact.\
\ls12\ilvl0
\f0\b \cb3 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}{\field{\*\fldinst{HYPERLINK "https://medium.com/androiddevelopers/the-android-lifecycle-cheat-sheet-part-iii-fragments-afc87d4f37fd"}}{\fldrslt \cb3 \expnd0\expndtw0\kerning0
The Android Lifecycle cheat sheet\uc0\u8202 \'97\u8202 part III: Fragments}}
\f1\b0 \cb3 \expnd0\expndtw0\kerning0
 - This show the order of lifecycle calls when an activity and fragment interact.}